---
- name: Setup debian
  block:
    - name: install dependent packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - libffi-dev
        - python-dev
        - python-setuptools

    - name: run apt update
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_distribution == 'Debian'
      register: apt_result
      until: apt_result|success
      retries: 3
      delay: 1
      ignore_errors: yes

    - name: retry if needed using command apt-get update
      command: apt-get update
      when: apt_result|failed

    - name: remove python-pip
      apt:
        name: python-pip
        state: absent

    - name: install latest pip
      easy_install:
        name: pip
        executable: "{{ debian_easy_install_bin }}"
        state: latest

    - name: remove docker-py
      pip:
        name: docker-py
        state: absent

    - name: install python packages
      pip: 
        name: virtualenv,docker-compose,uptime

    - name: install python packages
      pip: 
        name: "{{ item }}"
      with_items: "{{ required_pip }}"

    - name: add docker repo
      apt_repository:
        repo: "{{ docker_debian_repo }}"
        state: present

    - copy:
        dest: "{{ item.file }}"
        content: |
          Package: {{ item.package }}
          Pin: {{ item.pin }}
          Priority: {{ item.pin_priority }}
        mode: 0444
        owner: root
        group: root
      with_items: "{{ docker_apt_pin }}"

    - name: install docker
      apt:
        name: docker-engine
        update_cache: yes
        state: present
        force: yes

    - name: create filesystem paths
      file:
        dest: "{{ docker_daemon_config_file | dirname }}"
        owner: root
        group: root
        state: directory

    - name: create daemon config
      template:
        src: daemon.json.j2
        dest: "{{ docker_daemon_config_file }}"
        mode: 0644
        owner: root
        group: root
      notify:
        - restart docker

    - name: start docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes
  when: ansible_os_family == "Debian"
