---
- name: Setup redhat
  block:
    - name: install python packages
      pip:
        name: "{{ item.name }}"
        version: "{{ (item | default({})).version | default(omit) }}"
      loop: "{{ required_pip }}"

    - name: add devicemapper deps
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: latest

    - name: add epel repo
      yum:
        name: epel-release
        state: latest

    - name: get repo file
      local_action:
        module: get_url
        url: "{{ docker_yum_repo }}"
        dest: "/tmp/{{ docker_yum_repo_file }}"
        mode: 0644
        validate_certs: "{{ docker_verify_ssl }}"

    - name: get repo data
      set_fact:
        repo_data: "{{ lookup('repo_ini', '/tmp/' + docker_yum_repo_file) }}"

    - name: add docker repos
      yum_repository:
        name: "{{ item.key }}"
        description: "{{ item.value.name }}"
        baseurl: "{{ item.value.baseurl }}"
        enabled: "{{ item.value.enabled }}"
        gpgcheck: "{{ item.value.gpgcheck }}"
        gpgkey: "{{ item.value.gpgkey }}"
      loop: "{{ repo_data | default({}) | dict2items }}"

    - name: install python packages
      pip:
        name:
          - docker-compose
          - docker
          - uptime

    - name: create filesystem paths
      file:
        dest: "{{ docker_daemon_config_file | dirname }}"
        owner: root
        group: root
        state: directory

    - name: create daemon config
      template:
        src: daemon.json.j2
        dest: "{{ docker_daemon_config_file }}"
        mode: 0644
        owner: root
        group: root
      notify:
        - restart docker

    - name: install docker-ce
      yum:
        name: "docker-ce-{{ docker_rpm_version }}"
        state: present

    - name: create filesystem paths
      file:
        dest: "{{ docker_daemon_config_file | dirname }}"
        owner: root
        group: root
        state: directory

    - name: create daemon config
      template:
        src: daemon.json.j2
        dest: "{{ docker_daemon_config_file }}"
        mode: 0644
        owner: root
        group: root
      notify:
        - restart docker
  when: ansible_os_family in [ "RedHat", "ClearOS"]
